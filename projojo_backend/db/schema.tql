define

entity user @abstract,
    owns id @key,
    owns email @card(1),
    owns fullName @card(1),
    owns imagePath @card(1),
    plays oauthAuthentication:user @card(1..10);

entity supervisor sub user,
    plays manages:supervisor @card(1),
    plays creates:supervisor @card(0..);

entity student sub user,
    plays hasSkill:student @card(0..),
    plays registersForTask:student @card(0..);

entity teacher sub user;

entity oauthProvider,
    owns name @card(0..1), # e.g. "microsoft", "google"
    plays oauthAuthentication:provider;

entity business,
    owns name @key,
    owns description @card(1),
    owns imagePath @card(1),
    owns location @card(1..),
    plays manages:business @card(0..),
    plays hasProjects:business @card(0..),
    plays businessInvite:business @card(0..);

entity project,
    owns name @card(1),
    owns description @card(1),
    owns imagePath @card(1),
    owns createdAt @card(1),
    plays hasProjects:project @card(1),
    plays containsTask:project @card(0..),
    plays creates:project @card(0..);

entity task,
    owns name @card(1),
    owns description @card(1),
    owns totalNeeded @card(1),
    owns createdAt @card(1),
    plays containsTask:task @card(1),
    plays requiresSkill:task @card(0..),
    plays registersForTask:task @card(0..);

entity skill,
    owns name @key,
    owns isPending @card(1),
    owns createdAt @card(1),
    plays requiresSkill:skill @card(0..),
    plays hasSkill:skill @card(0..);

entity inviteKey,
    owns key @key,
    owns inviteType @card(1),
    owns isUsed @card(1),
    owns createdAt @card(1),
    plays businessInvite:key @card(0..1);

relation oauthAuthentication,
    relates provider,
    relates user,
    owns oauthSub @key;

relation creates,
    relates supervisor @card(1),
    relates project @card(0..),
    owns createdAt @card(1);

relation manages,
    relates supervisor @card(1),
    relates business @card(1),
    owns location @card(1..);

relation hasProjects,
    relates business @card(1),
    relates project @card(1..);

relation containsTask,
    relates project @card(1),
    relates task @card(1);

relation requiresSkill,
    relates task @card(1),
    relates skill @card(1);

relation hasSkill,
    relates student @card(1),
    relates skill @card(1),
    owns description @card(0..1);

relation registersForTask,
    relates student @card(1),
    relates task @card(1),
    owns description @card(1),
    owns isAccepted @card(0..1),
    owns response @card(0..1),
    owns createdAt @card(1);

relation businessInvite,
    relates business @card(1),
    relates key @card(1);

#Werkt helaas nog niet :(
# TLDR: maakt automatisch een permission relatie aan als een supervisor een project aanmaakt permissie voor wat? zien we dan wel maar wss aanpassingen doen etc
# nu ik erover nadenk moet dit eigenlijk gebeuren met projectCreation.. TODO: apply rule for projectCreation relation
#rule access: when {
#    (supervisor: $s, project: $p) isa projectCreation;
#} then {
#    (supervisorRole: $s, projectRole: $p) isa accessPermission;
#};


attribute email value string;
attribute name value string;
attribute fullName value string;
attribute imagePath value string;
attribute id value string;
attribute oauthSub value string;
attribute description value string;
attribute location value string;
attribute isPending value boolean;
attribute createdAt value datetime;
attribute totalNeeded value integer;
attribute isAccepted value boolean;
attribute response value string;
attribute key value string;
attribute inviteType value string @values("business", "teacher");
attribute isUsed value boolean;
